// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package navigator

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	api_v1 "k8s.io/client-go/pkg/api/v1"
	reflect "reflect"
)

func init() {
	SchemeBuilder.Register(RegisterDeepCopies)
}

// RegisterDeepCopies adds deep-copy functions to the given scheme. Public
// to allow building arbitrary schemes.
func RegisterDeepCopies(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedDeepCopyFuncs(
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseCluster, InType: reflect.TypeOf(&CouchbaseCluster{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseClusterList, InType: reflect.TypeOf(&CouchbaseClusterList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseClusterNodePool, InType: reflect.TypeOf(&CouchbaseClusterNodePool{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseClusterPersistenceConfig, InType: reflect.TypeOf(&CouchbaseClusterPersistenceConfig{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseClusterPlugin, InType: reflect.TypeOf(&CouchbaseClusterPlugin{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseClusterSpec, InType: reflect.TypeOf(&CouchbaseClusterSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseClusterStatus, InType: reflect.TypeOf(&CouchbaseClusterStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_CouchbaseImage, InType: reflect.TypeOf(&CouchbaseImage{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchCluster, InType: reflect.TypeOf(&ElasticsearchCluster{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchClusterList, InType: reflect.TypeOf(&ElasticsearchClusterList{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchClusterNodePool, InType: reflect.TypeOf(&ElasticsearchClusterNodePool{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchClusterPersistenceConfig, InType: reflect.TypeOf(&ElasticsearchClusterPersistenceConfig{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchClusterPlugin, InType: reflect.TypeOf(&ElasticsearchClusterPlugin{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchClusterSpec, InType: reflect.TypeOf(&ElasticsearchClusterSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchClusterStatus, InType: reflect.TypeOf(&ElasticsearchClusterStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_navigator_ElasticsearchImage, InType: reflect.TypeOf(&ElasticsearchImage{})},
	)
}

// DeepCopy_navigator_CouchbaseCluster is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseCluster(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseCluster)
		out := out.(*CouchbaseCluster)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*v1.ObjectMeta)
		}
		if newVal, err := c.DeepCopy(&in.Spec); err != nil {
			return err
		} else {
			out.Spec = *newVal.(*CouchbaseClusterSpec)
		}
		return nil
	}
}

// DeepCopy_navigator_CouchbaseClusterList is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseClusterList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseClusterList)
		out := out.(*CouchbaseClusterList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]CouchbaseCluster, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*CouchbaseCluster)
				}
			}
		}
		return nil
	}
}

// DeepCopy_navigator_CouchbaseClusterNodePool is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseClusterNodePool(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseClusterNodePool)
		out := out.(*CouchbaseClusterNodePool)
		*out = *in
		if in.Roles != nil {
			in, out := &in.Roles, &out.Roles
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		if in.Resources != nil {
			in, out := &in.Resources, &out.Resources
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*api_v1.ResourceRequirements)
			}
		}
		if in.Persistence != nil {
			in, out := &in.Persistence, &out.Persistence
			*out = new(CouchbaseClusterPersistenceConfig)
			**out = **in
		}
		return nil
	}
}

// DeepCopy_navigator_CouchbaseClusterPersistenceConfig is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseClusterPersistenceConfig(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseClusterPersistenceConfig)
		out := out.(*CouchbaseClusterPersistenceConfig)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_CouchbaseClusterPlugin is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseClusterPlugin(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseClusterPlugin)
		out := out.(*CouchbaseClusterPlugin)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_CouchbaseClusterSpec is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseClusterSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseClusterSpec)
		out := out.(*CouchbaseClusterSpec)
		*out = *in
		if in.Plugins != nil {
			in, out := &in.Plugins, &out.Plugins
			*out = make([]CouchbaseClusterPlugin, len(*in))
			copy(*out, *in)
		}
		if in.NodePools != nil {
			in, out := &in.NodePools, &out.NodePools
			*out = make([]CouchbaseClusterNodePool, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*CouchbaseClusterNodePool)
				}
			}
		}
		if in.Sysctl != nil {
			in, out := &in.Sysctl, &out.Sysctl
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		return nil
	}
}

// DeepCopy_navigator_CouchbaseClusterStatus is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseClusterStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseClusterStatus)
		out := out.(*CouchbaseClusterStatus)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_CouchbaseImage is an autogenerated deepcopy function.
func DeepCopy_navigator_CouchbaseImage(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*CouchbaseImage)
		out := out.(*CouchbaseImage)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchCluster is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchCluster(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchCluster)
		out := out.(*ElasticsearchCluster)
		*out = *in
		if newVal, err := c.DeepCopy(&in.ObjectMeta); err != nil {
			return err
		} else {
			out.ObjectMeta = *newVal.(*v1.ObjectMeta)
		}
		if newVal, err := c.DeepCopy(&in.Spec); err != nil {
			return err
		} else {
			out.Spec = *newVal.(*ElasticsearchClusterSpec)
		}
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchClusterList is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchClusterList(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchClusterList)
		out := out.(*ElasticsearchClusterList)
		*out = *in
		if in.Items != nil {
			in, out := &in.Items, &out.Items
			*out = make([]ElasticsearchCluster, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*ElasticsearchCluster)
				}
			}
		}
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchClusterNodePool is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchClusterNodePool(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchClusterNodePool)
		out := out.(*ElasticsearchClusterNodePool)
		*out = *in
		if in.Roles != nil {
			in, out := &in.Roles, &out.Roles
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		if in.Resources != nil {
			in, out := &in.Resources, &out.Resources
			if newVal, err := c.DeepCopy(*in); err != nil {
				return err
			} else {
				*out = newVal.(*api_v1.ResourceRequirements)
			}
		}
		if in.Persistence != nil {
			in, out := &in.Persistence, &out.Persistence
			*out = new(ElasticsearchClusterPersistenceConfig)
			**out = **in
		}
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchClusterPersistenceConfig is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchClusterPersistenceConfig(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchClusterPersistenceConfig)
		out := out.(*ElasticsearchClusterPersistenceConfig)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchClusterPlugin is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchClusterPlugin(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchClusterPlugin)
		out := out.(*ElasticsearchClusterPlugin)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchClusterSpec is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchClusterSpec(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchClusterSpec)
		out := out.(*ElasticsearchClusterSpec)
		*out = *in
		if in.Plugins != nil {
			in, out := &in.Plugins, &out.Plugins
			*out = make([]ElasticsearchClusterPlugin, len(*in))
			copy(*out, *in)
		}
		if in.NodePools != nil {
			in, out := &in.NodePools, &out.NodePools
			*out = make([]ElasticsearchClusterNodePool, len(*in))
			for i := range *in {
				if newVal, err := c.DeepCopy(&(*in)[i]); err != nil {
					return err
				} else {
					(*out)[i] = *newVal.(*ElasticsearchClusterNodePool)
				}
			}
		}
		if in.Sysctl != nil {
			in, out := &in.Sysctl, &out.Sysctl
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchClusterStatus is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchClusterStatus(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchClusterStatus)
		out := out.(*ElasticsearchClusterStatus)
		*out = *in
		return nil
	}
}

// DeepCopy_navigator_ElasticsearchImage is an autogenerated deepcopy function.
func DeepCopy_navigator_ElasticsearchImage(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ElasticsearchImage)
		out := out.(*ElasticsearchImage)
		*out = *in
		return nil
	}
}
